///
/// Generated file. Do not edit.
///
// coverage:ignore-file
// ignore_for_file: type=lint

part of 'translations.cgm.dart';

// Path: <root>
class Translations implements BaseTranslations<AppLocale, Translations> {
	/// Returns the current translations of the given [context].
	///
	/// Usage:
	/// final t = Translations.of(context);
	static Translations of(BuildContext context) => InheritedLocaleData.of<AppLocale, Translations>(context).translations;

	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	Translations.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.en,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <en>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	dynamic operator[](String key) => $meta.getTranslation(key);

	late final Translations _root = this; // ignore: unused_field

	// Translations
	late final _TranslationsOnboardingEn onboarding = _TranslationsOnboardingEn._(_root);
	late final _TranslationsGroupEn group = _TranslationsGroupEn._(_root);
	late final _TranslationsEndEn end = _TranslationsEndEn._(_root);
	TextSpan advancedPlural({required num count, required InlineSpan Function(num) countBuilder, required GenderContext gender}) => RichPluralResolvers.bridge(
		n: count,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('en'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'One'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Other '),
			countBuilder(count),
			TextSpan(text: ', ${_root.onboarding.greet2(gender: gender)}'),
		]),
	);
}

// Path: onboarding
class _TranslationsOnboardingEn {
	_TranslationsOnboardingEn._(this._root);

	final Translations _root; // ignore: unused_field

	// Translations
	String welcome({required Object fullName}) => 'Welcome ${fullName}';

	/// Bye text
	String bye({required Object firstName}) => 'Bye ${firstName}';

	TextSpan hi({required InlineSpan name, required Object lastName, required GenderContext context, required Object fullName, required Object firstName}) => TextSpan(children: [
		const TextSpan(text: 'Hi '),
		name,
		TextSpan(text: ' and ${_root.onboarding.greet(lastName: lastName, context: context, fullName: fullName, firstName: firstName)}'),
	]);
	List<PageData> get pages => [
		_TranslationsOnboarding$pages$0i0$En._(_root),
		_TranslationsOnboarding$pages$0i1$En._(_root),
	];
	List<MPage> get modifierPages => [
		_TranslationsOnboarding$modifierPages$0i0$En._(_root),
		_TranslationsOnboarding$modifierPages$0i1$En._(_root),
	];
	String greet({required GenderContext context, required Object lastName, required Object fullName, required Object firstName}) {
		switch (context) {
			case GenderContext.male:
				return 'Hello Mr ${lastName} and ${_root.onboarding.welcome(fullName: fullName)}';
			case GenderContext.female:
				return 'Hello Ms ${lastName} and ${_root.onboarding.bye(firstName: firstName)}';
		}
	}
	String greet2({required GenderContext gender}) {
		switch (gender) {
			case GenderContext.male:
				return 'Hello Mr';
			case GenderContext.female:
				return 'Hello Ms';
		}
	}
	String greetCombination({required Object lastName, required Object fullName, required Object firstName, required GenderContext context, required GenderContext gender}) => '${_root.onboarding.greet(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}, ${_root.onboarding.greet2(gender: gender)}';
	String welcomeLinkedPlural({required num n, required Object fullName, required Object firstName}) => 'Hello ${_root.group.users(n: n, fullName: fullName, firstName: firstName)}';
	String welcomeLinkedContext({required Object lastName, required Object fullName, required Object firstName, required GenderContext context}) => 'Hello ${_root.onboarding.greet(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}';
	String welcomeFullLink({required num n, required Object fullName, required Object firstName, required Object lastName, required GenderContext context}) => 'Ultimate ${_root.onboarding.welcomeLinkedPlural(n: n, fullName: fullName, firstName: firstName)} and ${_root.onboarding.welcomeLinkedContext(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}';
}

// Path: group
class _TranslationsGroupEn {
	_TranslationsGroupEn._(this._root);

	final Translations _root; // ignore: unused_field

	// Translations
	String users({required num n, required Object fullName, required Object firstName}) => (_root.$meta.cardinalResolver ?? PluralResolvers.cardinal('en'))(n,
		zero: 'No Users and ${_root.onboarding.welcome(fullName: fullName)}',
		one: 'One User',
		other: '${n} Users and ${_root.onboarding.bye(firstName: firstName)}',
	);
}

// Path: end
class _TranslationsEndEn with EndData {
	_TranslationsEndEn._(this._root);

	final Translations _root; // ignore: unused_field

	// Translations
	@override List<String> get stringPages => [
		'1st Page',
		'2nd Page',
	];
	@override List<Map<String, String>> get pages => [
		{
			'unknown': 'Unknown\nError',
		},
		{
			'with space': 'An Error',
			'with second space': 'An 2nd Error',
		},
	];
}

// Path: onboarding.pages.0
class _TranslationsOnboarding$pages$0i0$En with PageData {
	_TranslationsOnboarding$pages$0i0$En._(this._root);

	final Translations _root; // ignore: unused_field

	// Translations
	@override String get title => 'First Page';
	@override String get content => 'First Page Content';
}

// Path: onboarding.pages.1
class _TranslationsOnboarding$pages$0i1$En with PageData {
	_TranslationsOnboarding$pages$0i1$En._(this._root);

	final Translations _root; // ignore: unused_field

	// Translations
	@override String get title => 'Second Page';
}

// Path: onboarding.modifierPages.0
class _TranslationsOnboarding$modifierPages$0i0$En with MPage {
	_TranslationsOnboarding$modifierPages$0i0$En._(this._root);

	final Translations _root; // ignore: unused_field

	// Translations
	@override String get title => 'First Modifier Page';
	@override String get content => 'First Page Content';
}

// Path: onboarding.modifierPages.1
class _TranslationsOnboarding$modifierPages$0i1$En with MPage {
	_TranslationsOnboarding$modifierPages$0i1$En._(this._root);

	final Translations _root; // ignore: unused_field

	// Translations
	@override String get title => 'Second Modifier Page';
}
